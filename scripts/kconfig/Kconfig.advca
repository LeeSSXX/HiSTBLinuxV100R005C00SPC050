#+++++++++++++++++++++++++++++++++++++++++++++++++++
menuconfig HI_ADVCA_SUPPORT
	bool "Advance CA Support"
	default n
#--------------------------------
choice
	prompt "Advance CA Type"
	depends on HI_ADVCA_SUPPORT
	default ADVCA_OTHER
config  ADVCA_CONAX
	bool "Conax"
config  ADVCA_NOVEL
	bool "Novel"
config  ADVCA_NAGRA
	bool "Nagra"
	select HI_TSIO_SUPPORT if HI3796MV200
config  ADVCA_SUMA
	bool "Suma"
config  ADVCA_CTI
	bool "Cti"
config  ADVCA_VERIMATRIX
	bool "Verimatrix"
config  ADVCA_IRDETO
	bool "Irdeto"
config  ADVCA_PANACCESS
	bool "Panaccess"
config  ADVCA_DCAS
	bool "Dcas"
config  ADVCA_OTHER
	bool "Other"
endchoice

choice
	prompt "Verimatrix Type"
	depends on  ADVCA_VERIMATRIX && HI_ADVCA_SUPPORT
config  ADVCA_VERIMATRIX_ADVANCE
	bool "Advanced"
config  ADVCA_VERIMATRIX_ULTRA
	bool "Ultra"
endchoice 

menu "fbl parameters config"
	depends on ADVCA_VERIMATRIX_ULTRA && ADVCA_VERIMATRIX && HI_ADVCA_SUPPORT
	
	config HI_FBL_OEM_RSA_PUB_KEY
	prompt "OEM RSA Public key(512 Bytes)"
	string
	depends on ADVCA_VERIMATRIX_ULTRA && ADVCA_VERIMATRIX && HI_ADVCA_SUPPORT
	help
	    it's used to verify "Ext Params Area", when chipset is Ultra, it's used to verify SBL image also.
	
	config HI_FBL_SWPK_OEM_KEY
	prompt "Encrypted SWPK_OEM(16 bytes)"
	string
	depends on ADVCA_VERIMATRIX_ULTRA && ADVCA_VERIMATRIX && HI_ADVCA_SUPPORT
	help
	    it's used to decrypt SBL image, only for Ultra chipset.
	
	config HI_SECURE_OS_PARITITION_SIZE
	hex "Secure OS paritition size"
	depends on ADVCA_VERIMATRIX_ULTRA && ADVCA_VERIMATRIX && HI_ADVCA_SUPPORT
	default 0x800000

	config HI_SBL_PARITITION_SIZE
	hex "SBL paritition size"
	depends on ADVCA_VERIMATRIX_ULTRA && ADVCA_VERIMATRIX && HI_ADVCA_SUPPORT
	default 0x400000

	config HI_FBL_DATA_PARITITION_SIZE
	hex "FBL data paritition size"
	depends on ADVCA_VERIMATRIX_ULTRA && ADVCA_VERIMATRIX && HI_ADVCA_SUPPORT
	default 0x800000

	config HI_SBL_VERIFY_FLAG
	bool "SBL Verify Flag"
	depends on ADVCA_VERIMATRIX_ULTRA && ADVCA_VERIMATRIX && HI_ADVCA_SUPPORT
	default n
	help
	    if the SBL image is signed, but no need to verify, say n; otherwise the SBL image should be verified

	config HI_SBL_DECRYPT_FLAG
	bool "SBL Decrypt Flag"
	depends on ADVCA_VERIMATRIX_ULTRA && ADVCA_VERIMATRIX && HI_ADVCA_SUPPORT && (HI_SBL_VERIFY_FLAG=y)
	default n
	help
	    if the SBL image is not encrypted, say n; otherwise the SBL image is encrypted. this is valid when SBL Verify Flag is y.
endmenu
 
config  HI_ADVCA_TYPE
	string
	depends on HI_ADVCA_SUPPORT
	default CONAX           if ADVCA_CONAX
	default NOVEL           if ADVCA_NOVEL
	default NAGRA           if ADVCA_NAGRA
	default SUMA            if ADVCA_SUMA
	default CTI             if ADVCA_CTI
	default VERIMATRIX      if ADVCA_VERIMATRIX_ADVANCE
	default VERIMATRIX_ULTRA     if ADVCA_VERIMATRIX_ULTRA
	default IRDETO		if ADVCA_IRDETO
	default PANACCESS	if ADVCA_PANACCESS
	default DCAS		if ADVCA_DCAS
	default OTHER           if ADVCA_OTHER
#--------------------------------


menuconfig ADVCA_FUNCTION
	bool "Advance CA Function"
	depends on HI_ADVCA_SUPPORT
	default n
	help
	  From now on,this option is only for Nagra and Conax CA.Some functions of SDK are disabled,especially those for debugging.

choice
	prompt "Advca Function"
	depends on ADVCA_FUNCTION
config  FUNCTION_RELEASE
	bool "RELEASE"
	help
	  With this option selected,SDK can meets some security requirements of advanced CA listed below.
	  1.Useless drivers,modules and libraries are not allowed to be compiled.
	  2.Modules in kernel are not unloadable.
	  3.NFS is not supported.
	  4.No debugging method is supported.No debugging information outputs.
	  5.No user can log into system through shell.
config  FUNCTION_DEBUG
	bool "DEBUG"
	help
	  With this option selected,functions below are added to FINAL version.
	  1.Allow communication through UART.
	  2.Allow user to log into system.
	  3.Allow user to run apps in command line.
endchoice

config  HI_ADVCA_FUNCTION
	string
	depends on ADVCA_FUNCTION
	default DEBUG       if FUNCTION_DEBUG
	default RELEASE     if FUNCTION_RELEASE

config HI_STATIC_LIB_ONLY
	bool
	default y
	depends on ADVCA_FUNCTION

config HI_ADVCA_VERIFY_ENABLE
    bool "Advca verify enable"
    depends on HI_ADVCA_SUPPORT
    help
      If you want to enable boot to verify other images (kernel,loader,rootfs and so on), say y.

config HI_ADVCA_VMX_3RD_SIGN
    bool "Verimatrix Third-Party Sign Solution"
    depends on (HI_ADVCA_SUPPORT && ADVCA_VERIMATRIX_ADVANCE)
	default n
    help
      If you want to enable verimatrix third-party signing solution, say y.

config HI_ADVCA_USE_EXT1_RSA_KEY
    bool "Verify with ext1_rsa_key"
    depends on HI_ADVCA_SUPPORT && ADVCA_CONAX
    default n
    help
      If the boot verify other images (kernel,loader,rootfs and so on) with the ext1_rsa_key which is stored in the key area of signed boot image, say y.
      If this option is not selected, the boot will verify other images with the ext2_rsa_key in bootcode.
      Please refer to source/boot/product/driver/advca/common/auth/ca_config.c for ext2_rsa_key.

#--------------------------------
menuconfig HI_ADVCA_SANDBOX_SUPPORT
	bool "Support Advance CA Sandbox"
	depends on HI_ADVCA_SUPPORT
	default y
	
choice
	prompt "CA Sandbox Type"
	depends on HI_ADVCA_SANDBOX_SUPPORT
	default SANDBOX_LXC
config  SANDBOX_CHROOT
	bool "Chroot"
	depends on HI_LOADER_APPLOADER
config  SANDBOX_LXC
	bool "LXC"
	depends on !HI_LOADER_APPLOADER

endchoice

config  HI_ADVCA_SANDBOX_TYPE
	string
	depends on HI_ADVCA_SANDBOX_SUPPORT
	default CHROOT        if SANDBOX_CHROOT
	default LXC           if SANDBOX_LXC

#--------------------------------
