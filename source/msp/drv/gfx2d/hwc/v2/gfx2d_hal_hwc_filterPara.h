/******************************************************************************
*              Copyright 2004 - 2014, Hisilicon Tech. Co., Ltd.
*                           ALL RIGHTS RESERVED
* FileName: gfx2d_hal_hwc_filter.h
* Description: Graphic 2D engine hwc filter interface declaration
*
* History:
* Version   Date         Author     DefectNum    Description
* main\1    2013-10-23              NULL         Create this file.
*******************************************************************************/
#ifndef _HWC_FILTERPARA_H_

#ifdef __cplusplus
#if __cplusplus
extern "C" {
#endif  /* __cplusplus */
#endif  /* __cplusplus */

#define HWC_FILTER_LEVELS 7 /*滤波等级,分为7级*/
#define HWC_FILTER_PHASE 17 /*相位,32相位,需要17组系数*/
#define HWC_FILTER_HORIZON_LUM_TAP  8   /*水平亮度滤波阶数*/
#define HWC_FILTER_VERTICAL_LUM_TAP 4   /*垂直亮度滤波阶数*/
#define HWC_FILTER_HORIZON_CHM_TAP 8    /*水平色度滤波阶数*/
#define HWC_FILTER_VERTICAL_CHM_TAP 4   /*垂直色度滤波阶数*/

/*垂直滤波系数*/
static HI_S32 gs_as32VerticalCoef[] =
{
    /* ratio > 1 */
    0x2c000c,   0x3fc000c,
    0x2c000b,   0x3fc000d,
    0x2c000a,   0x3fb000f,
    0x2c0009,   0x3fb0010,
    0x2b0008,   0x3fb0012,
    0x2b0007,   0x3fb0013,
    0x2a0006,   0x3fb0015,
    0x2a0005,   0x3fb0016,
    0x290004,   0x3fc0017,
    0x280003,   0x3fc0019,
    0x280002,   0x3fc001a,
    0x270001,   0x3fc001c,
    0x270000,   0x3fc001d,
    0x250000,   0x3fd001e,
    0x2403ff,   0x3fd0020,
    0x2203ff,   0x3fe0021,
    0x2203fe,   0x3fe0022,
    0x0,        0x0,        //invalid param, 16byte align

    /* ratio = 1 */
    0x3f0000,   0x0,
    0x3f03fe,   0x3,
    0x3f03fc,   0x5,
    0x3f03fa,   0x3ff0008,
    0x3e03f8,   0x3ff000b,
    0x3e03f7,   0x3fe000d,
    0x3c03f6,   0x3fe0010,
    0x3b03f5,   0x3fd0013,
    0x3a03f4,   0x3fc0016,
    0x3903f4,   0x3fb0018,
    0x3703f4,   0x3fa001b,
    0x3403f4,   0x3fa001e,
    0x3303f4,   0x3f90020,
    0x3103f4,   0x3f80023,
    0x2f03f4,   0x3f70026,
    0x2d03f5,   0x3f60028,
    0x2a03f6,   0x3f6002a,
    0x0,        0x0,        //invalid param, 16byte align

    /* ratio <1 && ratio >=0.75 */
    0x2c000c,   0x3fc000c,
    0x2c000b,   0x3fc000d,
    0x2c000a,   0x3fb000f,
    0x2c0009,   0x3fb0010,
    0x2b0008,   0x3fb0012,
    0x2b0007,   0x3fb0013,
    0x2a0006,   0x3fb0015,
    0x2a0005,   0x3fb0016,
    0x290004,   0x3fc0017,
    0x280003,   0x3fc0019,
    0x280002,   0x3fc001a,
    0x270001,   0x3fc001c,
    0x270000,   0x3fc001d,
    0x250000,   0x3fd001e,
    0x2403ff,   0x3fd0020,
    0x2203ff,   0x3fe0021,
    0x2203fe,   0x3fe0022,
    0x0,        0x0,        //invalid param, 16byte align

    /* ratio <0.75 && ratio >= 0.5 */
    0x2c000c,   0x3fc000c,
    0x2c000b,   0x3fc000d,
    0x2c000a,   0x3fb000f,
    0x2c0009,   0x3fb0010,
    0x2b0008,   0x3fb0012,
    0x2b0007,   0x3fb0013,
    0x2a0006,   0x3fb0015,
    0x2a0005,   0x3fb0016,
    0x290004,   0x3fc0017,
    0x280003,   0x3fc0019,
    0x280002,   0x3fc001a,
    0x270001,   0x3fc001c,
    0x270000,   0x3fc001d,
    0x250000,   0x3fd001e,
    0x2403ff,   0x3fd0020,
    0x2203ff,   0x3fe0021,
    0x2203fe,   0x3fe0022,
    0x0,        0x0,        //invalid param, 16byte align

    /* ratio < 0.5 && ratio >=0.33 */
    0x24000f,   0x3fe000f,
    0x24000e,   0x3fe0010,
    0x24000d,   0x3fe0011,
    0x24000c,   0x3fe0012,
    0x24000b,   0x3fe0013,
    0x23000a,   0x3ff0014,
    0x230009,   0x3ff0015,
    0x230009,   0x3ff0015,
    0x230008,   0x3ff0016,
    0x220007,   0x17,
    0x220006,   0x18,
    0x210006,   0x19,
    0x200005,   0x1001a,
    0x200004,   0x1001b,
    0x1e0004,   0x2001c,
    0x1e0003,   0x2001d,
    0x1d0003,   0x3001d,
    0x0,        0x0,        //invalid param, 16byte align

    /* ratio < 0.33 && ratio >= 0.25 */
    0x24000f,   0x3fe000f,
    0x24000e,   0x3fe0010,
    0x24000d,   0x3fe0011,
    0x24000c,   0x3fe0012,
    0x24000b,   0x3fe0013,
    0x23000a,   0x3ff0014,
    0x230009,   0x3ff0015,
    0x230009,   0x3ff0015,
    0x230008,   0x3ff0016,
    0x220007,   0x17,
    0x220006,   0x18,
    0x210006,   0x19,
    0x200005,   0x1001a,
    0x200004,   0x1001b,
    0x1e0004,   0x2001c,
    0x1e0003,   0x2001d,
    0x1d0003,   0x3001d,
    0x0,        0x0,        //invalid param, 16byte align

    /* ratio < 0.25 */
    0x24000f,   0x3fe000f,
    0x24000e,   0x3fe0010,
    0x24000d,   0x3fe0011,
    0x24000c,   0x3fe0012,
    0x24000b,   0x3fe0013,
    0x23000a,   0x3ff0014,
    0x230009,   0x3ff0015,
    0x230009,   0x3ff0015,
    0x230008,   0x3ff0016,
    0x220007,   0x17,
    0x220006,   0x18,
    0x210006,   0x19,
    0x200005,   0x1001a,
    0x200004,   0x1001b,
    0x1e0004,   0x2001c,
    0x1e0003,   0x2001d,
    0x1d0003,   0x3001d,
    0x0,        0x0,        //invalid param, 16byte align
};


/* 水平滤波系数 */
static HI_S32 gs_as32HorizonCoef[] =
{
    /* ratio > 1 */
    0x7ff000,    0x3fc01c38,    0x2,
    0x6ff000,    0x3fb02438,    0x2,
    0x4ff400,    0x3fb02c37,    0x2,
    0x3ff400,    0x3fa03437,    0x2,
    0x1ff800,    0x3fa03837,    0x2,
    0xff800,      0x3fa04036,    0x2,
    0x3ffffc00,    0x3f904835,    0x2,
    0x3feffc00,    0x3f905034,    0x2,
    0x3fdffc00,    0x3f905833,    0x2,
    0x3fc00000,    0x3f806032,    0x2,
    0x3fb00000,    0x3f806831,    0x2,
    0x3fa00000,    0x3f807030,    0x2,
    0x3fa00400,    0x3f80782d,    0x2,
    0x3f900400,    0x3f80802c,    0x2,
    0x3f900400,    0x3f80882a,    0x2,
    0x3f800400,    0x3f809029,    0x2,
    0x3f800800,    0x3f809826,    0x2,
    0x0,                     //invalid param, 16byte align

    /*ratio=1*/
    0x0,                 0x3f,              0x0,
    0x3ff00000,    0x83f,             0x0,
    0x3fd00400,    0x3ff0103f,    0x0,
    0x3fc00400,    0x3ff0183e,    0x0,
    0x3fb00400,    0x3fe0203e,    0x0,
    0x3fa00400,    0x3fe0283d,    0x0,
    0x3f900800,    0x3fd0303c,    0x0,
    0x3f900800,    0x3fc03c3a,    0x0,
    0x3f800800,    0x3fc04438,    0x1,
    0x3f800800,    0x3fb05036,    0x1,
    0x3f800800,    0x3fb05834,    0x1,
    0x3f700800,    0x3fa06433,    0x1,
    0x3f700800,    0x3fa07030,    0x1,
    0x3f700800,    0x3f90782f,    0x1,
    0x3f800800,    0x3f90842b,    0x1,
    0x3f800800,    0x3f809029,    0x1,
    0x3f800800,    0x3f809826,    0x2,
    0x0,                            //invalid param, 16byte align

    /* ratio <1 && ratio >=0.75 */
    0x9ff000,    0x3fc02435,    0x1,
    0x8ff000,    0x3fc02c34,    0x1,
    0x7ff000,    0x3fb03434,    0x1,
    0x5ff400,    0x3fb03834,    0x1,
    0x4ff400,    0x3fb04033,    0x1,
    0x3ff400,    0x3fa04833,    0x1,
    0x2ff800,    0x3fa05031,    0x1,
    0x1ff800,    0x3fa05431,    0x1,
    0xff800,    0x3fa05c30,    0x1,
    0x3ffffc00,    0x3fa0642e,    0x1,
    0x3feffc00,    0x3fa06c2d,    0x1,
    0x3fdffc00,    0x3fa0702d,    0x1,
    0x3fdffc00,    0x3fa0782b,    0x1,
    0x3fc00000,    0x3fa08029,    0x1,
    0x3fc00000,    0x3fa08827,    0x1,
    0x3fc00000,    0x3fa09026,    0x0,
    0x3fb00000,    0x3fb09425,    0x0,
    0x0,                            //invalid param, 16byte align

    /* ratio <0.75 && ratio >= 0.5 */
    0xdff000,    0x3fc0342e,    0x0,
    0xcff000,    0x3fc0382e,    0x0,
    0xbff000,    0x3fc0402d,    0x0,
    0x9ff400,    0x3fc0442d,    0x0,
    0x8ff400,    0x3fc0482d,    0x0,
    0x7ff400,    0x3fc0502c,    0x0,
    0x6ff400,    0x3fc0542c,    0x0,
    0x5ff400,    0x3fc0582c,    0x0,
    0x4ff400,    0x3fc0602b,    0x0,
    0x3ff800,    0x3fc0642a,    0x0,
    0x2ff800,    0x3fc06c29,    0x0,
    0x2ff800,    0x3fd07027,    0x0,
    0x1ff800,    0x3fd07427,    0x0,
    0xff800,    0x3fd07c27,    0x3ff,
    0xffc00,    0x3fe08024,    0x3ff,
    0x3ffffc00,    0x3fe08424,    0x3ff,
    0x3feffc00,    0x3fe08c23,    0x3ff,
    0x0,                            //invalid param, 16byte align

    /* ratio < 0.5 && ratio >=0.33 */
    0xfff800,    0x3fe03c27,    0x3ff,
    0xfff400,    0x3fe04426,    0x3ff,
    0xeff400,    0x3fe04826,    0x3ff,
    0xdff400,    0x3fe04c26,    0x3ff,
    0xdff400,    0x3fe05025,    0x3ff,
    0xcff400,    0x3ff05424,    0x3ff,
    0xbff400,    0x3ff05824,    0x3ff,
    0xaff400,    0x3ff05c24,    0x3ff,
    0x9ff400,    0x3ff06024,    0x3ff,
    0x8ff400,    0x6424,    0x3fe,
    0x8ff400,    0x6823,    0x3fe,
    0x7ff400,    0x106c22,    0x3fe,
    0x6ff400,    0x107022,    0x3fe,
    0x5ff400,    0x207421,    0x3fe,
    0x5ff400,    0x207421,    0x3fe,
    0x4ff800,    0x30781f,    0x3fe,
    0x3ff800,    0x307c1f,    0x3fe,
    0x0,                            //invalid param, 16byte align

    /* ratio < 0.33 && ratio >= 0.25 */
    0x11ffc00,    0x3ff04421,    0x3ff,
    0x10ffc00,    0x4421,    0x3ff,
    0xfffc00,    0x4821,    0x3ff,
    0xfffc00,    0x4c20,    0x3ff,
    0xeffc00,    0x104c20,    0x3ff,
    0xdff800,    0x105420,    0x3ff,
    0xdff800,    0x105820,    0x3fe,
    0xcff800,    0x205820,    0x3fe,
    0xbff800,    0x205c20,    0x3fe,
    0xbff800,    0x20601f,    0x3fe,
    0xaff800,    0x30601f,    0x3fe,
    0x9ff800,    0x30641f,    0x3fe,
    0x8ff800,    0x40681e,    0x3fe,
    0x8ff800,    0x40681e,    0x3fe,
    0x7ff800,    0x506c1d,    0x3fe,
    0x7ff800,    0x50701c,    0x3fe,
    0x6ff800,    0x60701c,    0x3fe,
    0x0,                            //invalid param, 16byte align

    /* ratio < 0.25 */
    0x11ffc00,    0x3ff04421,    0x3ff,
    0x10ffc00,    0x4421,    0x3ff,
    0xfffc00,    0x4821,    0x3ff,
    0xfffc00,    0x4c20,    0x3ff,
    0xeffc00,    0x104c20,    0x3ff,
    0xdff800,    0x105420,    0x3ff,
    0xdff800,    0x105820,    0x3fe,
    0xcff800,    0x205820,    0x3fe,
    0xbff800,    0x205c20,    0x3fe,
    0xbff800,    0x20601f,    0x3fe,
    0xaff800,    0x30601f,    0x3fe,
    0x9ff800,    0x30641f,    0x3fe,
    0x8ff800,    0x40681e,    0x3fe,
    0x8ff800,    0x40681e,    0x3fe,
    0x7ff800,    0x506c1d,    0x3fe,
    0x7ff800,    0x50701c,    0x3fe,
    0x6ff800,    0x60701c,    0x3fe,
    0x0,                            //invalid param, 16byte align
};

#ifdef __cplusplus
#if __cplusplus
}
#endif  /* __cplusplus */
#endif  /* __cplusplus */

#endif /* _HWC_FILTERPARA_H_*/
