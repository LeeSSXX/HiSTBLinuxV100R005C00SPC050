#trustedcore mk file
#created by sdk

#add version:100 means version 1.00
TRUSTEDCORE_VERSION = 200
WITH_DEBUG_VERSION = false
COMPARE_IMAGE = 0
TEE_SUPPORT_SKYTONE_VERSION = 10000
WITH_ENG_VERSION = 0

OS_PLATFORM_TYPE := LINUX
ifeq ($(strip $(OS_PLATFORM_TYPE)), ANDROID)
TRUSTEDCORE_DIR=${TOPDIR}vendor/thirdparty/trustedcore
else
TRUSTEDCORE_DIR=$(shell pwd)
endif

WITH_KIRIN_PLATFORM := 0
WITH_BALONG_V722_PLATFORM := 1
WITH_DEVCHIP_PLATFORM := 2

WITH_16M_MEM := 0
WITH_32M_MEM := 1
#add imax internal task support sdk
ifdef IMAX_CIPHER
IMAX_SUPPORT := 1
else
IMAX_SUPPORT :=0
endif
LPAE_SUPPORT := 1

#selection of trustedcore platform
#TRUSTEDCORE_PLATFORM_CHOOSE := WITH_BALONG_V722_PLATFORM
#TRUSTEDCORE_PLATFORM_CHOOSE := WITH_KIRIN_PLATFORM
TRUSTEDCORE_PLATFORM_CHOOSE := WITH_DEVCHIP_PLATFORM

ifeq ($(strip $(TRUSTEDCORE_PLATFORM_CHOOSE)), WITH_KIRIN_PLATFORM)
WITH_CHIP_HI3650 := 0
WITH_CHIP_HI6250 := 1
WITH_CHIP_HI3660 := 2
WITH_CHIP_HI3670 := 3
ifneq ($(findstring hi3650, $(TARGET_BOARD_PLATFORM)), )
TRUSTEDCORE_CHIP_CHOOSE := WITH_CHIP_HI3650
endif
ifneq ($(findstring hi6250, $(TARGET_BOARD_PLATFORM)), )
TRUSTEDCORE_CHIP_CHOOSE := WITH_CHIP_HI6250
endif
ifneq ($(findstring hi3660, $(TARGET_BOARD_PLATFORM)), )
TRUSTEDCORE_CHIP_CHOOSE := WITH_CHIP_HI3660
ifeq ($(BOARD_CHARGER_ENABLE_DRM), true)
WITH_HIVCODEC_SUPPORT   := true
endif
ifeq ($(CFG_IRIS), true)
WITH_IRIS_SUPPORT   := true
endif
endif
ifneq ($(findstring kirin970, $(TARGET_BOARD_PLATFORM)), )
TRUSTEDCORE_CHIP_CHOOSE := WITH_CHIP_HI3670
endif
ifeq ($(strip $(TRUSTEDCORE_CHIP_CHOOSE)), )
TRUSTEDCORE_CHIP_CHOOSE := WITH_CHIP_HI3650
#print info
$(info cannot detect chip platform, use default WITH_CHIP_HI3650 to generate trustedcore.img)
endif

$(info PLATFROM is $(TRUSTEDCORE_PLATFORM_CHOOSE), CHIPSET is $(TRUSTEDCORE_CHIP_CHOOSE))

PLATFORM_DIR := kirin
endif

ifeq ($(strip $(TRUSTEDCORE_PLATFORM_CHOOSE)), WITH_BALONG_V722_PLATFORM)
WITH_16M_MEM := 1
WITH_32M_MEM := 0
LPAE_SUPPORT := 0
#WITH_ROT_SUPPORT := true
WITH_SECMOD_SUPPORT := true
endif

ifeq ($(strip $(TRUSTEDCORE_PLATFORM_CHOOSE)), WITH_BALONG_V722_PLATFORM)
PLATFORM_DIR := balong
WITH_CHIP_HI3650 := 0
WITH_CHIP_HI6250 := 1
WITH_CHIP_HI3660 := 2
WITH_CHIP_HI6932 := 4
TRUSTEDCORE_CHIP_CHOOSE := WITH_CHIP_HI6932
endif

ifeq ($(strip $(TRUSTEDCORE_PLATFORM_CHOOSE)), WITH_DEVCHIP_PLATFORM)
LPAE_SUPPORT := 0
PLATFORM_DIR := devchip
endif

include ${TRUSTEDCORE_DIR}/platform/${PLATFORM_DIR}/platform.mk

#se support choice
#SE_VENDOR = watchdata
#SE_VENDOR = nxp
#SE_VENDOR = hisi

MICRO_TRUSTEDCORE = false

WITH_CC_DRIVER = true
WITH_K3V2PRO_CCTEST = true
WITH_NMI_WATCHDOG = true

ifeq ($(TARGET_BUILD_VARIANT),eng)
WITH_ENG_VERSION = 1
endif

# add by sdk begin
ifneq ($(filter 4.6 4.6.%, $(TARGET_GCC_VERSION)),)
TRUSTEDCORE_ASFLAG_SET := false
else
TRUSTEDCORE_ASFLAG_SET := true
endif
# when support arch64 use: "TRUSTEDCORE_ARCH_CHOOSE := AARCH64"
TRUSTEDCORE_ARCH_CHOOSE := ARM


TRUSTEDCORE_MK := ${TRUSTEDCORE_DIR}/mk
TRUSTEDCORE_BUILD_RAW_STATIC_LIBRARY = $(TRUSTEDCORE_MK)/trustedcore_static_library_build.mk
TRUSTEDCORE_BUILD_RAW_EXECUTABLE = $(TRUSTEDCORE_MK)/trustedcore_raw_executable_build.mk
TRUSTEDCORE_BUILD_TA_EXECUTABLE = $(TRUSTEDCORE_MK)/task_executable.mk
TRUSTEDCORE_BUILD_EXECUTABLE_IMG = $(TRUSTEDCORE_MK)/trustedcore_img_build.mk
TA_LINK_SCRIPT = $(TRUSTEDCORE_MK)/ta_link.ld
# add by sdk end

# add by sdk
# originally, two CC switch in four makefiles,
# now, both in this file

#selection of SECURE_TESTSUITE: none, RTOSck_UT, RTOSck_IT, RTOSck_PT
SECURE_TESTSUITE = none
#SECURE_TESTSUITE = RTOSck_UT
#SECURE_TESTSUITE = RTOSck_IT
include ${TRUSTEDCORE_DIR}/trustedcore_flags.mk
